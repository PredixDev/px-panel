{"version":3,"sources":["px-panel.es6.js"],"names":["Polymer","is","behaviors","IronResizableBehavior","listeners","properties","position","type","String","value","observer","opened","Boolean","notify","fixed","persistent","background","floating","minimizable","_fullSize","open","close","_getClasses","fullSize","classes","push","join","_persistentChanged","newValue","_onResize","e","debounce","window","innerWidth","innerHeight","parentNode","getBoundingClientRect","width","height"],"mappings":"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","file":"px-panel.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-panel',\n\n    behaviors: [\n      Polymer.IronResizableBehavior\n    ],\n\n    listeners: {\n      'iron-resize': '_onResize'\n    },\n\n    properties: {\n      /**\n      * Where to place the panel - one of `top`, `bottom`, `left`, or `right`.\n      */\n      position: {\n        type: String,\n        value: 'right',\n        observer: '_onResize'\n      },\n      /**\n       * Whether the panel is currently open (expanded).\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n      /**\n       * If set to true, the panel will have `position:fixed` so it will\n       * be attached to the browser window instead of its parent container.\n       */\n      fixed: {\n        type: Boolean,\n        value: false,\n        observer: '_onResize'\n      },\n      /**\n       * If set to true, the panel will be opened and calls to the `close()` method will be ignored.\n       * Mutating the `opened` property will still force a close of the panel.\n       */\n      persistent: {\n        type: Boolean,\n        value: false,\n        observer: '_persistentChanged'\n      },\n      /**\n       * Whether to display the panel with a `light`, `medium`, or `dark` background.\n       * These terms are relative, and can be used in conjunction with px-theme,\n       * px-dark-theme, or your custom theme or CSS variables to toggle between 3 different\n       * background colors.\n       */\n      background: {\n        type: String,\n        value: 'light'\n      },\n      /**\n       * If set to true, the panel will appear with an offset relative to the screen / container edges.\n       * Can be overridden or customized using the CSS variables.\n       */\n      floating: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * If set to true, the panel will not fully collapse when closed. It will appear in a minimized state.\n       * You can use the content slot `minimized` to determine what will appear inside the panel while minimized\n       * (likely an icon or button for fully opening the panel).\n       */\n      minimizable: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Used internally to determine if the panel should display at full-width or full-height\n       * for mobile responsiveness and space-constrained situations.\n       */\n      _fullSize: {\n        type: Boolean,\n        value: false\n      }\n    },\n    /**\n    * Opens the panel\n    */\n    open() {\n      this.opened = true;\n    },\n    /**\n    * Closes the panel\n    */\n    close() {\n      if(!this.persistent) {\n        this.opened = false;\n      }\n    },\n    /**\n     * Returns the appropriate classes based on the property values.\n     */\n    _getClasses(position,background,fixed,persistent,opened,floating,minimizable,fullSize) {\n      var classes = [position, background];\n      if(fixed) classes.push('fixed');\n      if(persistent) classes.push('persistent');\n      if(opened) classes.push('opened');\n      if(floating) classes.push('floating');\n      if(minimizable) classes.push('minimizable');\n      if(fullSize) classes.push('full-size');\n      return classes.join(' ');\n    },\n    /**\n     * Sets the `opened` property for persistent panels.\n     */\n    _persistentChanged(newValue) {\n      if(newValue && !this.opened) {\n        this.open();\n      }\n    },\n\n    _onResize(e) {\n      this.debounce('resize', function() {\n        if(this.fixed) {\n          if(((this.position === \"left\" || this.position === \"right\") && window.innerWidth < 600) ||\n            ((this.position === \"top\" || this.position === \"bottom\") && window.innerHeight < 600)) {\n            this._fullSize = true;\n          }\n          else {\n            this._fullSize = false;\n          }\n        }\n        else {\n          if(((this.position === \"left\" || this.position === \"right\") && this.parentNode.getBoundingClientRect().width < 600) ||\n            ((this.position === \"top\" || this.position === \"bottom\") && this.parentNode.getBoundingClientRect().height < 600)) {\n            this._fullSize = true;\n          }\n          else {\n            this._fullSize = false;\n          }\n        }\n      },100);\n    }\n  });\n})();\n"]}